package ru.geekbrains.api.lesson4.test;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Scanner;
import java.util.Set;


public class Notebook {
    // значения для каждого ноутбука
   String name;
   String cpu;
    int hdd;
    int ram;
    String os;
    int price;
    double diagonal;

    public Notebook(String name, int ram, int hdd, String cpu, String os, double diagonal, int price) { // конструктор для объекта
        //this.id = counter++;
        this.name = name; // производитель
        this.ram = ram; // ОЗУ Гб
        this.os = os; // Операционная система
        this.diagonal = diagonal; // диагональ экрана
        this.cpu = cpu; // тип процессора
        this.hdd = hdd; // объем жесткого диска
        this.price = price; // цена
    }

    @Override // описываем метод toSting для вывода строки с характеристиками товара
    public String toString() {
        return String.format(
                "Производитель: %s \n " +
                        "объем оперативной памяти: %d Гб \n " +
                        "объем накопителя % d Гб \n ОС %s \n " +
                        "Тип процессора %s \n Диагональ %.1f \n " +
                        "Цена, руб.  %d \n",
                this.name, this.ram, this.hdd, this.os, this.cpu, this.diagonal, this.price);
    }
}

class App {

    public static void main(String[] args) throws Exception {
        Set<Notebook> setNotebook = getNotebooks();

        Scanner sc = new Scanner(System.in);
        System.out.println("Введите желаемые характеристики: \n " +
                "Мининальный объем оперативной памяти:");
        int ramUser = sc.nextInt();
        System.out.println("Мининальный объем накопителя: ");
        int hddUser = sc.nextInt();

        System.out.println("Цена от:");
        double priceUser = sc.nextInt();
        System.out.println("Предустановленая ОС: ");
        String osUser = sc.next();
        System.out.println("По вашим параметрам в наличии имеются следующие ноутбуки");
        // ищем ноутбук с заданными параметрами
        for (Notebook note : setNotebook) {

            if ((note.ram >= ramUser) && (note.hdd >= hddUser) && (note.price >= priceUser) && (note.os.toLowerCase().contains(osUser.toLowerCase()))) {
                System.out.println(note.toString());
            }
        }
        sc.close();
    }

    private static Set<Notebook> getNotebooks() {
        Notebook notebook1 = new Notebook("Lenovo", 8, 500, "Intel", "Windows 11", 15.6, 40000);
        Notebook notebook2 = new Notebook("Acer", 4, 250, "Intel", "Windows 10", 11, 35000);
        Notebook notebook3 = new Notebook("Honor", 16, 512, "AMD", "Ubuntu", 16.1, 55000);
        Notebook notebook4 = new Notebook("Apple", 32, 1024, "M1", "MacOs", 13.3, 100000);
        Notebook notebook5 = new Notebook("HP", 16, 1024, "Intel", "nonOS", 15.6, 40000);
        Notebook notebook6 = new Notebook("Xiomi", 16, 2048, "AMD", "Windows 11", 17, 70000);
        Notebook notebook7 = new Notebook("DNS", 4, 512, "AMD", "Linux", 15.6, 23000);

        Set<Notebook> unicNotebook = new HashSet<Notebook>();// создаем коллекцию из объектов Notebook
        unicNotebook.add(notebook1); // добавляем ноутбуки в коллекцию unicNotebook
        unicNotebook.add(notebook2);
        unicNotebook.add(notebook3);
        unicNotebook.add(notebook4);
        unicNotebook.add(notebook5);
        unicNotebook.add(notebook6);
        unicNotebook.add(notebook7);

        return unicNotebook;
    }
}


